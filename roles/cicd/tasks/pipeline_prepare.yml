---
 - name: Create a k8s namespace
   kubernetes.core.k8s:
    name: mfpipeline
    api_version: v1
    kind: Namespace
    state: present
   tags:
    - pipeline_prepare
    
 - name: Create PV
   kubernetes.core.k8s:
    definition:
     apiVersion: v1
     kind: PersistentVolume
     metadata:
      name: tkn-workspace
     spec:
      storageClassName: tknstorage
      accessModes:
       - ReadWriteOnce
      capacity:
       storage: 1Gi
      hostPath:
       path: /mnt/data/tkn/
       type: DirectoryOrCreate 
    state: present
   tags:
    - pipeline_prepare  
    
 - name: Create PVC
   kubernetes.core.k8s:
    definition:   
     apiVersion: v1
     kind: PersistentVolumeClaim
     metadata:
      name: tkn-workspace-claim
      namespace: mfpipeline
     spec:
      storageClassName: tknstorage
      accessModes:
       - ReadWriteOnce
      resources:
       requests:
        storage: 1Gi    
    state: present
   tags:
    - pipeline_prepare  
    
 - name: Create PV
   kubernetes.core.k8s:
    definition:
     apiVersion: v1
     kind: PersistentVolume
     metadata:
      name: tkn-deployrepo
     spec:
      storageClassName: tkndeploystorage
      accessModes:
       - ReadWriteOnce
      capacity:
       storage: 1Gi
      hostPath:
       path: /mnt/data/tkndeploy/
       type: DirectoryOrCreate 
    state: present
   tags:
    - pipeline_prepare  
    
 - name: Create PVC
   kubernetes.core.k8s:
    definition:   
     apiVersion: v1
     kind: PersistentVolumeClaim
     metadata:
      name: tkn-deployrepo-claim
      namespace: mfpipeline
     spec:
      storageClassName: tkndeploystorage
      accessModes:
       - ReadWriteOnce
      resources:
       requests:
        storage: 1Gi    
    state: present
   tags:
    - pipeline_prepare    
    
 - name: Download git-clone-task to the cluster.
   ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-clone/0.5/git-clone.yaml 
    dest: ~/git-clone.yaml
    mode: '0664'
   tags:
    - pipeline_prepare     

 - name: Apply git-clone-task to the cluster.
   kubernetes.core.k8s:
    state: present
    namespace: mfpipeline
    src: ~/git-clone.yaml 
   tags:
    - pipeline_prepare  
    
 - name: Download maven-task to the cluster.
   ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/tektoncd/catalog/main/task/maven/0.2/maven.yaml
    dest: ~/maven.yaml
    mode: '0664'
   tags:
    - pipeline_prepare     

 - name: Apply maven-task to the cluster.
   kubernetes.core.k8s:
    state: present
    namespace: mfpipeline
    src: ~/maven.yaml 
   tags:
    - pipeline_prepare  
    
 - name: Download buildah-task to the cluster.
   ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/tektoncd/catalog/main/task/buildah/0.2/buildah.yaml
    dest: ~/buildah.yaml
    mode: '0664'
   tags:
    - pipeline_prepare     

 - name: Apply buildah-task to the cluster.
   kubernetes.core.k8s:
    state: present
    namespace: mfpipeline
    src: ~/buildah.yaml 
   tags:
    - pipeline_prepare  
        
 - name: Download git-cli-task to the cluster.
   ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-cli/0.3/git-cli.yaml
    dest: ~/gitcli.yaml
    mode: '0664'
   tags:
    - pipeline_prepare     

 - name: Apply git-cli-task to the cluster.
   kubernetes.core.k8s:
    state: present
    namespace: mfpipeline
    src: ~/gitcli.yaml 
   tags:
    - pipeline_prepare  
    
 - name: Download yaml-edit-task to the cluster.
   ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/tektoncd/catalog/main/task/yq/0.2/yq.yaml
    dest: ~/yq.yaml
    mode: '0664'
   tags:
    - pipeline_prepare     

 - name: Apply yaml-edit-task to the cluster.
   kubernetes.core.k8s:
    state: present
    namespace: mfpipeline
    src: ~/yq.yaml 
   tags:
    - pipeline_prepare  
    
 - name: Create version task
   kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: tekton.dev/v1beta1
      kind: Task
      metadata:
        name: getversion
        namespace: mfpipeline
        annotations:
          description: |
                  A simple task that reads the version from a file
      spec:
        results:
          - name: version
            description: the version
          - name: current-date-human-readable
            description: The current date in human readable format
        workspaces:
          - name: source
            description: The workspace consisting of the got repo
        params:             
          - name: CONTEXT_DIR
            description: The name of the job and subdirectory in the workspace             
        steps:
          - name: print-date-unix-timestamp
            image: bash:latest
            script: |
              #!/usr/bin/env bash
              version=$(cat $(workspaces.source.path)/$(params.CONTEXT_DIR)/version.txt)  
              echo ${version} | tr -d "\n" | tee $(results.version.path)      
          - name: print-date-human-readable
            image: bash:latest
            script: |
              #!/usr/bin/env bash
              date | tee $(results.current-date-human-readable.path)    
   tags:
    - pipeline_prepare       
    
                                  
                               