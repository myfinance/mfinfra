---              
 - name: Create pipeline
   kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: tekton.dev/v1beta1
      kind: Pipeline
      metadata:
        name: mavenpipeline
        namespace: mfpipeline
      spec:
        params:
         - name: commitid
           description: The git commitid
         - name: gitrevision
           description: The git revision
           default: dev           
         - name: gitrepositoryurl
           description: The git repository url
           default: https://github.com/myfinance/mfframework.git
         - name: jobname
           description: The name of the job and subdirectory in the workspace
           default: mfframework                          
         - name: MVN_REPO
           type: string
           default: "http://192.168.100.73:31001/repository/maven-releases/"     
         - name: Container_REPO
           type: string
           default: "192.168.100.73:31003/repository/mydockerrepo/"  
         - name: deploymentrepo
           description: The git repository url of the deployment repo
           default: https://{{ repouser }}:{{ gittoken }}@github.com/myfinance/mfdeployment.git                                                                                              
        workspaces:
         - name: shared-workspace
         - name: maven-settings
         - name: cdrepo
         - name: git-config
        tasks:
         - name: clone-sources
           taskRef:
            name: git-clone
           params:
            - name: url
              value: $(params.gitrepositoryurl)
            - name: revision 
              value: $(params.gitrevision)
            - name: deleteExisting
              value: 'true'
            - name: submodules
              value: "false"
            - name: subdirectory
              value: $(params.jobname)
           workspaces:
            - name: output
              workspace: shared-workspace
         - name: getversion
           taskRef:
            name: getversion
           params:
            - name: CONTEXT_DIR
              value: $(params.jobname)            
           workspaces:
            - name: source
              workspace: shared-workspace            
           runAfter:
            - clone-sources                             
         - name: maven-set-version
           taskRef:
            name: maven
           params:
            - name: CONTEXT_DIR
              value: $(params.jobname)            
            - name: MAVEN_IMAGE
              value: maven:3.8.4-eclipse-temurin-17-alpine
            - name: GOALS 
              value: 
              - versions:set
              - -DnewVersion=$(tasks.getversion.results.version)$(params.commitid)
           runAfter:
            - getversion
           workspaces:
            - name: maven-settings
              workspace: maven-settings              
            - name: source
              workspace: shared-workspace                       
         - name: maven-build
           taskRef:
            name: mavenwithsidecar
           params:
            - name: CONTEXT_DIR
              value: $(params.jobname)
            - name: MAVEN_IMAGE
              value: maven:3.8.4-eclipse-temurin-17-alpine
            - name: GOALS 
              value: 
              - clean
              - deploy              
              - -DtargetRepository=$(params.MVN_REPO)
              - -Pjacoco 
              - -Dsonar.jacoco.reportPaths=./jacoco-ut.exec
              - -Dsonar.jacoco.itReportPath=./jacoco-it.exec 
              - org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
              - -Dsonar.projectKey=myfinance_$(params.jobname)
              - -Dsonar.organization=myfinance 
              - -Dsonar.host.url=https://sonarcloud.io 
              - -Dsonar.login=15c6a48657993c0485c6f8a8bd4dceb77bbd2ac3                        
           runAfter:
            - maven-set-version
           workspaces:
            - name: maven-settings
              workspace: maven-settings              
            - name: source
              workspace: shared-workspace    
         - name: container-build
           taskRef:
            name: maven
           params:
            - name: CONTEXT_DIR
              value: $(params.jobname)
            - name: MAVEN_IMAGE
              value: maven:3.8.4-eclipse-temurin-17-alpine                 
            - name: GOALS 
              value: 
              - package
              - jib:build
              - -Dmaven.test.skip=true
              - -Djib.container-repo=$(params.Container_REPO) 
           runAfter:
            - maven-build
           workspaces:
            - name: maven-settings
              workspace: maven-settings              
            - name: source
              workspace: shared-workspace  
         - name: clone-cd-repo
           taskRef:
            name: git-clone
           params:
            - name: url
              value: $(params.deploymentrepo)
            - name: revision 
              value: dev
            - name: deleteExisting
              value: 'true'
            - name: submodules
              value: "false"
           workspaces:
            - name: output
              workspace: cdrepo  
           runAfter:
            - container-build               
         - name: replace-image-tag-in-helm-chart
           taskRef:
            name: yq
           params:
            - name: files
              value: 
               - "helm-chart/versions/versions_test.yaml"
            - name: expression
              value: '(.$(params.jobname).imageversion = \"$(tasks.getversion.results.version)$(params.commitid)\")'
           workspaces:
            - name: source
              workspace: cdrepo            
           runAfter:
            - clone-cd-repo                          
         - name: git-push-update-helm
           taskRef:
            name: git-cli
           workspaces:
            - name: source
              workspace: cdrepo                
           params:
            - name: GIT_USER_NAME
              value: holgerfischer
            - name: GIT_USER_EMAIL
              value: holger@hfischer.org         
            - name: GIT_SCRIPT
              value: |
               git add helm-chart/versions/versions_test.yaml
               git commit -m "updated helm cart with Image Version '$(tasks.getversion.results.version)$(params.commitid)' for $(params.jobname)"
               git push origin HEAD:dev 
           runAfter:
            - replace-image-tag-in-helm-chart                                                            
   tags:
    - myf_pipeline   
        
 - name: Creates directory
   file:
    path: /opt/mf
    state: directory 
   tags:
    - myf_pipeline     
    
 - name: Creates directory
   file:
    path: /opt/mf/devmongo
    state: directory
   tags:
    - myf_pipeline      

 - name: Creates directory
   file:
    path: /opt/mf/prodmongo
    state: directory  
   tags:
    - myf_pipeline                
       
